//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are stckaed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
//
//
#include "StackingMessenger.hh"
#include "StackingAction.hh"
#include "G4UIcmdWithABool.hh"
#include "G4UIcmdWithAnInteger.hh"
#include "G4UIdirectory.hh"

StackingMessenger::StackingMessenger(StackingAction * stcka)
  :stcka(stcka) 
{  
 stckaDir = new G4UIdirectory("/GAMMATHEC/");

 activeCmd = new G4UIcmdWithABool("/GAMMATHEC/active",this);  
 activeCmd->SetGuidance("activate or disactivate GAMMATHEC");
 activeCmd->SetParameterName("active",false);
 activeCmd->AvailableForStates(G4State_PreInit,G4State_Idle);
}

StackingMessenger::~StackingMessenger()
{
  delete activeCmd;
  delete stckaDir;
}

void StackingMessenger::SetNewValue(G4UIcommand* command,G4String newValue)
{
if (command == activeCmd) {
   stcka->SetStackingActive(activeCmd->GetNewBoolValue(newValue));
 }
 else {
   G4cerr << "***** Command is not found !!! " << newValue << G4endl;
 }

}

