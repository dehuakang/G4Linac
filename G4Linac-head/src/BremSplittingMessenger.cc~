
#include "BremSplittingMessenger.hh"
#include "physiqueList.hh"
#include "G4UIcmdWithABool.hh"
#include "G4UIcmdWithAnInteger.hh"
#include "G4UIdirectory.hh"

BremSplittingMessenger::BremSplittingMessenger(physiqueList * list)
  :list(list) 
{  
 listDir = new G4UIdirectory("/BREMSPE/");

 // nSplit command
 nSplitCmd = new G4UIcmdWithAnInteger("/BREMSPE/nSplit",this);  
 nSplitCmd->SetGuidance("Splitting parameter - Combien des photons doivent etre produit");
 nSplitCmd->SetParameterName("nSplit",false);
 nSplitCmd->AvailableForStates(G4State_PreInit,G4State_Idle);

 activeCmd = new G4UIcmdWithABool("/BREMSPE/active",this);  
 activeCmd->SetGuidance("Activater ou  deactivater brem splitting");
 activeCmd->SetParameterName("active",false);
 activeCmd->AvailableForStates(G4State_PreInit,G4State_Idle);
 BREMSSEICmd = new G4UIcmdWithABool("/BREMSPE/BREMSSEI",this);  
 BREMSSEICmd->SetGuidance("Activater ou  deactivater BREMSSEI");
 BREMSSEICmd->SetParameterName("BREMSSEI",false);
 BREMSSEICmd->AvailableForStates(G4State_PreInit,G4State_Idle);
}

BremSplittingMessenger::~BremSplittingMessenger()
{
  delete nSplitCmd;
  delete activeCmd;
  delete listDir;
}

void BremSplittingMessenger::SetNewValue(G4UIcommand* command,G4String newValue)
{
 if (command == nSplitCmd ) { 
   list->SetNSplit(nSplitCmd->GetNewIntValue(newValue));
 } else if (command == activeCmd) {
   list->SetSplittingActive(activeCmd->GetNewBoolValue(newValue));
 }else if (command == BREMSSEICmd) {
   list->SetBREMSSEIsActive(BREMSSEICmd->GetNewBoolValue(newValue));
 }
 else {
   G4cerr << "***** Command is not found !!! " << newValue << G4endl;
 }

}

